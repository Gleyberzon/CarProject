DEFAULT_FUEL=50
DEFAULT_MAX_FUEL=100
DEFAULT_FUEL_CONSUMPTION=0.1
DEFAULT_MONEY=500
DEFAULT_GEAR=0
DEFAULT_SPEED_FOR_GEAR_LEVEL=30
PRICE_FOR_1L=1
MAX_GEAR=6
LOG_PATH="C:\\PythonTest\\log.txt"
LOG_ERROR_PATH="C:\\PythonTest\\errorLog.txt"
TEST_LOG_PATH="C:\\PythonTest\\testLog.txt"
TEST_PASS="TEST: {} - PASSED"
TEST_UNPASS="TEST: {} - NOT PASSED"

MESS_ENGINE_OFF="Engine off"
MESS_GEAR_UPED_TO="Gear upped to {}"
GEAR_ERR="The gear already at {}"
WARN_MESS_ALREADY_STARTED="Try to start driving: warning - already started"
WARN_MESS_ALREADY_STOPPED="Try to stop driving: warning - already stopped"
MESS_ENGINE_ON="Engine started"
KM_NOT_VALID="Invalid number of km: must be positive number"
GEAR_NOT_VALID="Invalid number of gear, must be number between 1 to {}"
TRY_TO_DRIVE="Try to drive {}km"
NEED_FUEL_MAX_POSSIBLE="Need fuel: {}, max possible {}"
NOT_ENOUGH_FUEL_AND_MONEY="Not enough fuel to drive {} km, and not enough money to add fuel"
DRIVE_LOG="Passed {}km, remaining fuel {}L, remain money {}$"
DRIVE_LOG_2="Passed {}km, fuel ended, remain to pass {}km"
DRIVE_LOG_TOTAL="Total: passed {}km, for {} hours on speed {}km/h, fuel remain {}L, money remain {}$"
AMOUNT_ERR="Invalid amount value: it must be positive number"
PRICE_ERR="Invalid price value: it must be positive number"
ERR_FUEL_OVERFLOW="It is impossible to add this amount because it will overflow max fuel's capacity"
MESS_ADD_FUEL_SUCCSESS="Added fuel in amount {}L, was payed {}$"
NO_MONEY="Not enough money to add {}L, need money: {}$, actual money: {}$"
FUEL_MONEY_MESS="Current amount fuel: {}L, max amount of fuel {}L, tried to add {}L"
ADD_FUEL_TOTAL_LOG="Current fuel {}L, remain money {}$"

GEAR_PAR=3
PAR_DRIVE_KM=400
PAR_DRIVE_KM_BIG=40000
PAR_DRIVE_GEAR=5



RUN_UNIT_TEST_FULL="python -m unittest test_Unit_Test.py"
RUN_UNIT_TEST_SINGLE="python -m unittest test_Unit_Test.py -k test_fuel_3"
RUN_PYTEST_FULL="python -m pytest test_car.py"
RUN_PYTEST_SINGLE="python -m pytest test_car.py::test_fuel_3"